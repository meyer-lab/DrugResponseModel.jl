""" In this file we fit all the drugs att once. """
function residHillAll(hP, concentrations::Matrix, g1::Array, g2::Array)
    res = 0.0

    # Solve for all drugs
    t = 1
    for j = 1:5
        hill = hP[[t:(t + 13); 71:76]]
        res += residHill(hill, concentrations[:, j], g1[:, :, j], g2[:, :, j])
        t += 14
    end

    return res
end

""" Organize Hill parameters for each drug in a 2D array. """
function Hill_p_eachDr(p)
    HillP = Matrix{eltype(p)}(undef, 14, 5)
    # each column: [EC50, steepness, max_g1,1_prog., max_g1,2_prog., max_g2,1_prog., max_g2,2_prog., max_g11_death, max_g12_death, max_g21_death, max_g22_death]
    j = 1
    for i = 1:5
        HillP[:, i] .= p[j:(j + 13)]
        j += 14
    end
    HillP
end


function optim_all(concs::Array{Float64, 2}, g1::Array{Float64, 3}, g2::Array{Float64, 3}; maxiter = 100000)
    f(x) = residHillAll(x, concs, g1, g2)

    lP = [minimum(concs); 0.01; 5e-6 * ones(12)]
    low = vcat(lP, lP, lP, lP, lP, 5e-6, 5e-6, 5e-6, 5e-6, 5e-6, 5e-6)
    hP = [maximum(concs); 10.0; 2.5 * ones(6); ones(6)]
    high = vcat(hP, hP, hP, hP, hP, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5)

    return optimize_helper(f, low, high, maxiter)
end

""" Takes in the Hill params and the index corresponding to the drug of interest, outputs the 9 long params at EC50. """
function EC50_params(p, i)
    d = Hill_p_eachDr(p)
    # returns the following at EC50: [g1_prog., g2_prog, g1_death, g2_death, g1%]
    return append!([
        p[71] + (d[3, i] - p[71]) / 2,
        p[72] + (d[4, i] - p[72]) / 2,
        p[73] + (d[5, i] - p[73]) / 2,
        p[74] + (d[6, i] - p[74]) / 2,
        p[75] + (d[7, i] - p[75]) / 2,
        p[76] + (d[8, i] - p[76]) / 2,
        d[9, i] / 2,
        d[10, i] / 2,
        d[11, i] / 2,
        d[12, i] / 2,
        d[13, i] / 2,
        d[14, i] / 2,
    ])
end

function parameters()
    # ps = [64.7017, 1.23308, 0.0497766, 0.0354078, 0.298186, 0.352937, 5.99025, 5.51624, 0.996764, 0.111, 0.912474, 0.882585, 0.999991, 0.999993, 10.3459, 60.3182, 0.0235755, 0.189566, 0.208661, 0.168131, 5.67416, 5.50529, 0.999703, 0.856264, 0.999872, 0.999973, 0.485208, 0.999991, 4.28723, 1.96154, 0.369573, 0.206118, 0.164357, 9.99424, 0.762876, 5.5222, 0.999996, 0.999991, 0.999991, 0.99997, 0.802116, 0.99997, 1.8953, 3.22331, 0.134315, 0.54119, 0.180243, 0.62034, 5.99009, 5.51988, 0.999972, 0.69186, 0.999996, 0.86843, 0.999971, 0.999985, 38.1342, 1.10607, 0.0920182, 0.464887, 0.270508, 9.98713, 5.98948, 5.52591, 0.999994, 0.999995, 0.899942, 0.999983, 0.999992, 0.999995, 0.188227, 4.06045, 0.160831, 9.99678, 5.99233, 5.52016]
    # ps = [41.0344, 1.19049, 0.0218886, 0.0227231, 0.0196711, 0.365798, 0.633352, 0.352679, 0.356918, 0.962542, 0.0300771, 0.999995, 0.999998, 0.971031, 129.837, 0.872128, 1.99988, 0.162396, 1.92442, 1.99744, 1.05315, 0.343968, 1.0, 1.0, 0.996255, 0.990439, 0.633404, 0.894326, 4.3579, 1.84243, 0.0258195, 0.361174, 0.279478, 0.409747, 0.0779829, 0.499509, 5.02441e-6, 1.0, 1.0, 1.0, 0.910216, 1.0, 2.01498, 3.39502, 0.174019, 0.140168, 1.99998, 1.9872, 0.74008, 0.313305, 0.584252, 0.999994, 0.959432, 0.999999, 0.999999, 1.0, 28.9282, 1.17123, 0.283458, 0.107746, 1.96149, 1.99992, 0.709239, 0.49967, 1.0, 0.999998, 0.979032, 0.988758, 0.999917, 0.933098, 2.0, 0.201884, 1.91476, 1.97491, 0.665105, 0.249237]
    # ps = [71.0917, 1.21847, 1.14942, 0.0313611, 0.328873, 8.84739, 7.6564, 1.37634, 0.00328837, 0.000313516, 0.0935303, 0.0568865, 5.21447e-6, 0.000190764, 20.7825, 57.1703, 0.300274, 0.0161699, 0.104185, 0.0914417, 7.57472, 1.37171, 3.08178e-5, 0.326117, 6.73842e-5, 0.997617, 0.0056687, 2.02642e-5, 10.7373, 2.08953, 9.85767, 0.166261, 0.12748, 8.84974, 7.77248, 1.38275, 7.12577e-6, 7.61444e-5, 9.73143e-5, 0.185189, 1.88769e-5, 2.24999e-5, 3.40006, 2.81837, 9.73221, 0.13823, 0.359239, 1.24151, 2.81778, 1.37477, 0.000340217, 0.310299, 0.000274844, 0.00246478, 0.000180082, 0.0387931, 30.4487, 1.08813, 0.30663, 0.0850144, 0.272131, 8.9584, 7.77211, 1.45311, 3.90227e-5, 0.000116969, 0.106554, 1.26097e-5, 4.09052e-5, 1.31778e-5, 9.86261, 0.182636, 0.176161, 8.9551, 7.77677, 1.3495]
    ps = [67.7567, 1.31589, 0.0182882, 0.187722, 1.33747, 0.040761, 0.339357, 1.53906, 0.00208762, 0.0040675, 0.00776288, 0.0019014, 0.0863159, 0.0429981, 301.363, 0.818773, 0.0618944, 0.0879136, 1.24916, 1.67318, 0.0623595, 1.45317, 0.00881838, 0.00363425, 0.0533112, 0.47592, 0.502809, 0.00168221, 72.7165, 1.06362, 0.219892, 0.00474389, 1.00079, 0.395531, 0.0658973, 1.55445, 0.00152597, 0.0021113, 0.000593343, 0.000908369, 0.00274977, 0.579155, 11.0602, 1.98276, 0.101726, 0.0132696, 0.491594, 0.424091, 0.0126649, 1.74313, 0.0522369, 0.973681, 0.60958, 0.0359138, 0.0060242, 0.00551171, 234.242, 0.59758, 0.000392954, 0.0319637, 2.37716, 1.58771, 0.263325, 1.68371, 0.00419042, 0.0418644, 0.148372, 0.0427738, 0.00297771, 0.000620238, 0.19549, 2.42589, 2.49188, 2.411, 0.199595, 1.72311]
    return ps
end
