---
weave_options:
  error: false
  echo: false
---

This file contains all the drugs simulations for the average of replicates, separately. Time series, G2 percentage, and quantified drug effects are shown.
```julia
import Pkg; Pkg.instantiate()
Pkg.activate(".")
using DrugResponseModel
using Plots, LinearAlgebra
Plots.scalefontsizes(0.7)

concs, _, g1s1, g2s1 = load(189, 1);
_, _, g1s2, g2s2 = load(189, 2);
_, _, g1s3, g2s3 = load(189, 3);

g1m = (g1s1 .+ g1s2 .+ g1s3) ./ 3;
g2m = (g2s1 .+ g2s2 .+ g2s3) ./ 3;
# G2 percentage
gdata2 = g2m ./ (g2m .+ g1m);
```

# Lapatinib
```julia
ps1 = [41.9571, 1.29118, 0.20449, 0.0215482, 8.72717e-5, 0.559952, 0.490092, 0.416013, 0.892354, 0.802622, 0.9983, 0.999954, 0.999944, 0.99995, 0.532622, 0.3574, 2.49887, 0.509067, 2.49943, 0.244101]
# ps1= [40.0497, 1.27068, 0.437056, 0.0129612, 0.00120111, 0.352259, 0.649508, 1.62395, 6.30421e-5, 0.00454209, 3.19341e-7, 9.16012e-6, 0.0706834, 0.00845164, 0.570084, 0.259274, 1.65732, 0.229486, 2.49969, 0.637341];
efcs = getODEparams(ps1, concs[:, 1]);

G1 = zeros(189, 8)
G2 = zeros(189, 8)
t = LinRange(0.0, 95.0, 189)
for i = 1:8 # concentration number
    G1[:, i], G2[:, i], _ = predict(efcs[:, i], efcs[:, 1], t)
end
```

## time series plot
```julia; eccho=false
p1 = DrugResponseModel.plotavg(G1, G2, g1m[:, :, 1], g2m[:, :, 1], 1, :false, concs[1, 1])
p =[DrugResponseModel.plotavg(G1, G2, g1m[:, :, 1], g2m[:, :, 1], i, :false, concs[i, 1]) for i=2:8]
plot(p1, p..., figsize=(1000, 700), dpi=250)
```

## G2 percentage plot
```julia
# percentage
g2 = G2 ./(G1 .+ G2);
p1=DrugResponseModel.plotperc(g2, "lap.", concs[:, 1], "model")
p2=DrugResponseModel.plotperc(gdata2[:, :, 1], "lap.", concs[:, 1], "data")
plot(p1, p2)
```

## quantified parameters plot
```julia
p1 = G1plots(concs[:, 1], efcs[1:2, :], "G1 prog. rate")
p2 = G2plots(concs[:, 1], efcs[3:6, :], "G2 prog. rate")
p3 = G1plots(concs[:, 1], efcs[7:8, :], "G1 death rate", ylim=0.5)
p4 = G2plots(concs[:, 1], efcs[9:12, :], "G2 death rate", ylim=0.5)
plot(p1, p2, p3, p4)
```

## print error for lapatinib:
```julia
norm(G1 - g1m[:, 1:7, 1]) + norm(G2 - g2m[:, 1:7, 1])
```

