---
weave_options:
  error: false
  echo: false
---

Time series simulations for some pairs of drugs.

```julia
import Pkg; Pkg.instantiate()
Pkg.activate(".")
using DrugResponseModel
using Plots, LinearAlgebra

concs, populations1, g1s1, g2s1 = load(189, 1);
concs, populations2, g1s2, g2s2 = load(189, 2);
concs, populations3, g1s3, g2s3 = load(189, 3);
g0 = g1s1[1,1,1]+g2s1[1,1,1];

g1avg = (g1s1 .+ g1s2 .+ g1s3) ./ 3; # pure data
g2avg = (g2s1 .+ g2s2 .+ g2s3) ./ 3; # pure data
popavg = g1avg .+ g2avg
paramAvg = [97.7434, 1.41726, 0.0501761, 0.930205, 0.111494, 0.123604, 0.552216, 
     92.9045, 1.40024, 0.996396, 0.0513087, 0.521831, 0.6535, 0.566578, 
     15.5317, 2.3689, 0.592433, 0.999986, 0.0283363, 0.286975, 0.503328, 
     3.96929, 4.62768, 0.0512281, 0.307528, 0.549714, 0.378717, 0.50959, 
     63.4248, 0.976052, 0.16582, 0.740009, 0.0572609, 0.0776912, 0.534201, 
     0.734513, 0.375555, 16.8387, 12.3945, 30.176, 14.5352];
efcs = getODEparamsAll(paramAvg, concs);
tim = 0.0:1.0:96.0;

""" To avoid repetition. """
function plot_combin_time(paramAvg, idA, idB, DrugA_name, DrugB_name, concA, concB)
  bliss_comb =  DrugResponseModel.CombinationParam(paramAvg, idA, idB)
  combb = bliss_comb[:, concA, concB]
  G1_lap, G2_lap = predict(efcs[:, concA, idA], g0, tim)
  G1_dox, G2_dox = predict(efcs[:, concA, idB], g0, tim)
  G1_com, G2_com = predict(combb, g0, tim)
  p1 = plot(tim, G1_lap, lw=2, label=DrugA_name, xlabel="time [hr]", ylabel="G1 cell number")
  plot!(tim, G1_dox, lw=2, label=DrugB_name)
  plot!(tim, G1_com, lw=2, label="combin")
  ylims!((0.0, 40.0))

  p2 = plot(tim, G2_lap, lw=2, label=DrugA_name, xlabel="time [hr]", ylabel="G2 cell number")
  plot!(tim, G2_dox, lw=2, label=DrugB_name)
  plot!(tim, G2_com, lw=2, label="combin")
  ylims!((0.0, 40.0))

  p3 = plot(tim, G1_lap .+ G2_lap, lw=2, label=DrugA_name, xlabel="time [hr]", ylabel="total cell number")
  plot!(tim, G1_dox .+ G2_dox, lw=2, label=DrugB_name)
  plot!(tim, G1_com .+ G2_com, lw=2, label="combin")
  ylims!((0.0, 40.0))

  p4 = plot(tim, G1_lap./(G1_lap .+ G2_lap), lw=2, ylabel="%G1", xlabel="time [hr]", label=DrugA_name)
  plot!(tim, G1_dox./(G1_dox .+ G2_dox), lw=2, label=DrugB_name)
  plot!(tim, G1_com./(G1_com .+ G2_com), lw=2, label="combin.")
  ylims!((0.0, 1.0))
  plot(p1, p2, p3, p4, layout=(2,2), size=(700, 700))

end
```

# Lapatinib 100 nM with Doxorubicin 20 nM

```julia
plot_combin_time(1, 2, efcs, "lap.", "dox.", 6, 4)
```

# Lapatinib 100 nM with Gemcitabine 30 nM

```julia
plot_combin_time(1, 3, efcs, "lap.", "gem.", 6, 7)
```

# Lapatinib 250 nM with Palbociclib 50 nM

```julia
plot_combin_time(1, 5, efcs, "lap.", "palbo.", 7, 5)
```

# Paclitaxel 2 nM with Doxorubicin 20 nM

```julia
plot_combin_time(4, 2, efcs, "tax.", "dox.", 4, 4)
```

# Paclitaxel 2 nM with Gemcitabine 10 nM

```julia
plot_combin_time(4, 3, efcs, "tax.", "gem.", 4, 6)
```

# Gemcitabine 5 nM with Doxorubicin 20 nM
```julia
plot_combin_time(3, 2, efcs, "gem.", "dox.", 4, 4)
```

# Palbociclib 100 nM with Gemcitabine 10 nM
```julia
plot_combin_time(5, 3, efcs, "palbo.", "gem.", 6, 6)
```
