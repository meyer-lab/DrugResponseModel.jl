Left show Bliss_model/Bliss_data and right shows Bliss_model/Loewe_data

```julia; echo=false
import Pkg; Pkg.instantiate()

Pkg.activate(".")
using DrugResponseModel
using ExponentialUtilities
using Plots
Plots.scalefontsizes(0.7)

concs, populations1, g1s1, g2s1 = load(189, 1);
concs, populations2, g1s2, g2s2 = load(189, 2);
concs, populations3, g1s3, g2s3 = load(189, 3);
g0 = g1s1[1,1,1]+g2s1[1,1,1];

g1avg = (g1s1 .+ g1s2 .+ g1s3) ./ 3; # pure data
g2avg = (g2s1 .+ g2s2 .+ g2s3) ./ 3; # pure data
popavg = g1avg .+ g2avg;

# this is the optimum estimated parameters for all drugs at once, and considers % in G1 as shared. ==> 37 parameters
pp = [52.1243, 1.2856, 0.0026682, 2.9096, 0.0250893, 0.0623134, 
      154.803, 1.10582, 0.304235, 0.295368, 0.411795, 0.613183, 
      82.5301, 1.05063, 0.391899, 0.919925, 0.0730874, 0.338454, 
      3.21729, 3.41872, 0.0841223, 1.52284, 0.281485, 0.207797, 
      60.2809, 0.913883, 0.00228251, 2.96638, 0.0583304, 0.0770743, 
      1.46021, 2.18259, 0.547192, 36.894, 70.8683, 17.2029, 10.6778]; # with 37 parameters

# this is the optimum estimated parameters for all drugs at once, and considers % in G1 separately for drugs. ==> 41 parameters
p = [97.7434, 1.41726, 0.0501761, 0.930205, 0.111494, 0.123604, 0.552216, 
     92.9045, 1.40024, 0.996396, 0.0513087, 0.521831, 0.6535, 0.566578, 
     15.5317, 2.3689, 0.592433, 0.999986, 0.0283363, 0.286975, 0.503328, 
     3.96929, 4.62768, 0.0512281, 0.307528, 0.549714, 0.378717, 0.50959, 
     63.4248, 0.976052, 0.16582, 0.740009, 0.0572609, 0.0776912, 0.534201, 
     0.734513, 0.375555, 16.8387, 12.3945, 30.176, 14.5352]

IC50_lap, IC50_dox, IC50_gem, IC50_tax, IC50_pal = DrugResponseModel.find_IC(popavg, 0.5);
println("IC50s from the data: \n lpt ", concs[IC50_lap,1], " dox ", concs[IC50_dox,2], " gem ", concs[IC50_gem,3], " tax ", concs[IC50_tax,4], " pal ", concs[IC50_pal,5])
println("\n IC50s from the model: \n lpt ", p[1], " dox ", p[8], " gem ", p[15], " tax ", p[22], " pal ", p[29])
effs = getODEparamsAll(p, concs);

# These are parameters from fitting each drug individually.
lapat_before = [43.1527, 0.966066, 0.149468, 1.07396, 0.20995, 0.373793, 0.0079829, 0.0202241, 0.536791, 21.7392, 7.00735, 0.101821, 1.41611];
dox_before = [95.5176, 0.141023, 0.0453853, 0.846542, 0.164408, 1.00001e-9, 0.0720467, 0.14468, 0.689475, 3.66135, 5.46383, 4.29732, 2.9077];
gemc_before = [10.7831, 0.925396, 0.93767, 1.85477, 0.219639, 0.491569, 0.00593379, 0.110279, 0.517813, 19.6588, 7.90343, 9.62803, 3.21637];
pac_before = [3.33798, 0.768057, 1.00004e-9, 3.01442, 0.27915, 0.0669792, 0.0570235, 0.0385754, 0.501908, 17.3979, 9.04839, 2.0261, 1.64753];
pal_before = [26.8681, 0.843195, 0.337619, 0.895753, 0.359512, 0.632667, 0.00720161, 0.0401928, 0.577674, 18.8691, 11.3867, 31.7324, 1.16337];
lapat = DrugResponseModel.getODEparams(lapat_before, concs[:, 1]);
dox = DrugResponseModel.getODEparams(dox_before, concs[:, 2]);
gemc = DrugResponseModel.getODEparams(gemc_before, concs[:, 3]);
pac = DrugResponseModel.getODEparams(pac_before, concs[:, 4]);
pal = DrugResponseModel.getODEparams(pal_before, concs[:, 5]);
```

# Combination
```julia; echo=false

# Bliss on pure cell numbers
BlissOnData = DrugResponseModel.blissCellNum(g1avg, g2avg; T = 189, n = 8) # includes are combinations 8 x 8 x 10

""" This function calculates cell number for parameter sets that are the result of Bliss on prog. rates. """
function BlissModelComb(bliss_comb, g1avg, g2avg, id1, id2)
      bliss_comb_cellnum = zeros(8,8)
      for i=1:8
            for j=1:8
                  g1, g2, _ = predict(bliss_comb[:, i, j], g1avg[1,1,1] + g2avg[1,1,1], 189)
                  bliss_comb_cellnum[i,j] = g1 + g2
            end
      end
      return bliss_comb_cellnum
end

""" This function plots the heatmap of combined cell numbers given any two drugs. """
function Heatmap(concs, data, i1, i2, d1name, d2name, title)
    concs[1, :] .= 0.0
    heatmap(
        string.(round.(log.(concs[:, i2]), digits = 1)),
        string.(round.(log.(concs[:, i1]), digits = 1)),
        data,
        xlabel = string(d2name, " log[nM]"),
        ylabel = string(d1name, " log [nM]"),
        title = title,
        clim = (0.0, 40.0),
    )
end
```
## Lapatinib and doxorubicin

```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(lapat, dox, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 1, 2)

loeweOnData = DrugResponseModel.loweCellNum(concs, 1, 2, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 1, 2, "Lpt", "Dox", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 1], 1, 2, "Lpt", "Dox", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 1, 2, "Lpt", "Dox", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```

## Lapatinib and gemcitabine

```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(lapat, gemc, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 1, 3)

loeweOnData = DrugResponseModel.loweCellNum(concs, 1, 3, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 1, 3, "Lpt", "Gem", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 2], 1, 3, "Lpt", "Gem", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 1, 3, "Lpt", "Gem", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```


## Lapatinib and paclitaxel

```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(lapat, pac, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 1, 4)

loeweOnData = DrugResponseModel.loweCellNum(concs, 1, 4, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 1, 4, "Lpt", "Tax", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 3], 1, 4, "Lpt", "Tax", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 1, 4, "Lpt", "Tax", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```

## Lapatinib and palbociclib

```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(lapat, pal, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 1, 5)

loeweOnData = DrugResponseModel.loweCellNum(concs, 1, 5, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 1, 5, "Lpt", "Palbo", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 4], 1, 5, "Lpt", "Palbo", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 1, 5, "Lpt", "Palbo", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```

## Doxorubicin and gemcitabine
```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(dox, gemc, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 2, 3)

loeweOnData = DrugResponseModel.loweCellNum(concs, 2, 3, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 2, 3, "Dox", "Gem", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 5], 2, 3, "Dox", "Gem", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 2, 3, "Dox", "Gem", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```

## Doxorubicin and paclitaxel
```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(dox, pac, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 2, 4)

loeweOnData = DrugResponseModel.loweCellNum(concs, 2, 4, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 2, 4, "Dox", "Tax", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 6], 2, 4, "Dox", "Tax", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 2, 4, "Dox", "Tax", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```


## Doxorubicin and palbociclib
```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(dox, pal, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 2, 5)

loeweOnData = DrugResponseModel.loweCellNum(concs, 2, 5, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 2, 5, "Dox", "Palbo", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 7], 2, 5, "Dox", "Palbo", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 2, 5, "Dox", "Palbo", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```


## Gemcitabine and paclitaxel
```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(gemc, pac, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 3, 4)

loeweOnData = DrugResponseModel.loweCellNum(concs, 3, 4, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 3, 4, "Gem", "Tax", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 8], 3, 4, "Gem", "Tax", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 3, 4, "Gem", "Tax", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```

## Gemcitabine and palbociclib
```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(gemc, pal, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 3, 5)

loeweOnData = DrugResponseModel.loweCellNum(concs, 3, 5, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 3, 5, "Gem", "Palbo", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 9], 3, 5, "Gem", "Palbo", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 3, 5, "Gem", "Palbo", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```

## Paclitaxel and palbociclib
```julia; echo=false
bliss_comb = DrugResponseModel.fullCombinationParam(pac, pal, effs, 8)
bliss_comb_cellnum = BlissModelComb(bliss_comb, g1avg, g2avg, 4, 5)

loeweOnData = DrugResponseModel.loweCellNum(concs, 4, 5, g1avg, g2avg);

p1=Heatmap(concs, bliss_comb_cellnum, 4, 5, "Tax", "Palbo", "Bliss Cell Cycle Model")
p2=Heatmap(concs, BlissOnData[:, :, 10], 4, 5, "Tax", "Palbo", "Bliss Data")
p3=Heatmap(concs, loeweOnData, 4, 5, "Tax", "Palbo", "Loewe Data")
plot(p1, p2, p3, size=(400, 550), layout=(3,1))
```