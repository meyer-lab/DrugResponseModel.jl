---
weave_options:
  error: true
  echo: false
---

Time series simulation for a pair of drugs in their EC50 concentration based on Bliss index.

```julia
import Pkg; Pkg.instantiate()
Pkg.activate(".")
using DrugResponseModel
using Plots, LinearAlgebra
concs, populations1, g1s1, g2s1 = load(189, 1);
concs, populations2, g1s2, g2s2 = load(189, 2);
concs, populations3, g1s3, g2s3 = load(189, 3);
g0 = g1s1[1,1,1]+g2s1[1,1,1];

g1avg = (g1s1 .+ g1s2 .+ g1s3) ./ 3; # pure data
g2avg = (g2s1 .+ g2s2 .+ g2s3) ./ 3; # pure data
popavg = g1avg .+ g2avg


paramAvg = [97.7434, 1.41726, 0.0501761, 0.930205, 0.111494, 0.123604, 0.552216, 
     92.9045, 1.40024, 0.996396, 0.0513087, 0.521831, 0.6535, 0.566578, 
     15.5317, 2.3689, 0.592433, 0.999986, 0.0283363, 0.286975, 0.503328, 
     3.96929, 4.62768, 0.0512281, 0.307528, 0.549714, 0.378717, 0.50959, 
     63.4248, 0.976052, 0.16582, 0.740009, 0.0572609, 0.0776912, 0.534201, 
     0.734513, 0.375555, 16.8387, 12.3945, 30.176, 14.5352];
efcs = getODEparamsAll(paramAvg, concs);

EC50s = [round(paramAvg[1], digits=1), round(paramAvg[8], digits=1), round(paramAvg[15], digits=1), round(paramAvg[22], digits=1), round(paramAvg[29], digits=1)]

### Our way of Bliss combination:

params = DrugResponseModel.paramsAtEC50(paramAvg)

function BlissUnit(p1, p2)
    # p1 and p2 are Arrays 9x1 and are assumed to be from the EC50 concentration.
    combin = similar(p1)
    combin[1:2] .= p1[1:2] .+ p2[1:2] .- p1[1:2] .* p2[1:2]
    combin[3:4] .= p1[3:4] .+ p2[3:4]
    combin[5:end] .= p1[5:end]
    return combin
end

tim = 0.0:2:88.0
```


# Lapatinib and Dox
```julia

combin = BlissUnit(params[:, 1], params[:, 2]) # lpt and dox

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)


plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Dox ", EC50s[2]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Lpt and Gemc
```julia

combin = BlissUnit(params[:, 1], params[:, 3]) # lpt and gmc

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Gem ", EC50s[3]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Lpt and tax
```julia

combin = BlissUnit(params[:, 1], params[:, 4]) # lpt and tax

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Tax ", EC50s[4]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Lpt and Palbo
```julia

combin = BlissUnit(params[:, 1], params[:, 5]) # lpt and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Palbo ", EC50s[5]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Dox and Gemc
```julia

combin = BlissUnit(params[:, 2], params[:, 3]) # dox and gmc

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Dox ", EC50s[2], " & Gem ", EC50s[3]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Dox and Tax
```julia

combin = BlissUnit(params[:, 2], params[:, 4]) # dox and tax

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Dox ", EC50s[2], " & Tax ", EC50s[4]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Dox and Palbo
```julia

combin = BlissUnit(params[:, 2], params[:, 5]) # dox and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Dox ", EC50s[2], " & Palbo ", EC50s[5]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```
# Gem and Tax
```julia

combin = BlissUnit(params[:, 3], params[:, 4]) # gem and tax

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Gem ", EC50s[3], " & Tax ", EC50s[4]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Gem and Palbo
```julia

combin = BlissUnit(params[:, 3], params[:, 5]) # gem and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Gem ", EC50s[3], " & Palbo ", EC50s[5]))
plot!(tim, G2, label="G2", lw=2)
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Tax and Palbo
```julia

combin = BlissUnit(params[:, 4], params[:, 5]) # tax and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Tax ", EC50s[4], " & Palbo ", EC50s[5]))
plot!(tim, G2, label="G2", lw=2)
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```
