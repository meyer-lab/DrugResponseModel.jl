---
weave_options:
  error: false
  echo: false
---

Time series simulation for a pair of drugs in their EC50 concentration based on Bliss index.

```julia
import Pkg; Pkg.instantiate()
Pkg.activate(".")
using DrugResponseModel
using Plots
Plots.scalefontsizes(0.7)

concs, _, g1s1, g2s1 = load(189, 1);
_, _, g1s2, g2s2 = load(189, 2);
_, _, g1s3, g2s3 = load(189, 3);
g0 = g1s1[1,1,1]+g2s1[1,1,1];

g1avg = (g1s1 .+ g1s2 .+ g1s3) ./ 3; # pure data
g2avg = (g2s1 .+ g2s2 .+ g2s3) ./ 3; # pure data
popavg = g1avg .+ g2avg


paramAvg = DrugResponseModel.return_param41()
efcs = getODEparamsAll(paramAvg, concs);

EC50s = [round(paramAvg[1], digits=1), round(paramAvg[8], digits=1), round(paramAvg[15], digits=1), round(paramAvg[22], digits=1), round(paramAvg[29], digits=1)]

### Our way of Bliss combination:
params = zeros(9, 5)
for i=1:5
  params[:, i] = DrugResponseModel.EC50_params(paramAvg, i)
end

tim = LinRange(0.0, 88.0, 44)
```


# Lapatinib and Dox
```julia

combin = Bliss_params_unit(params[:, 1], params[:, 2], hcat(efcs[:, 1, 1], efcs[:, 1, 2])) # lpt and dox

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)


plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Dox ", EC50s[2]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Lpt and Gemc
```julia

combin = Bliss_params_unit(params[:, 1], params[:, 3], hcat(efcs[:, 1, 1], efcs[:, 1, 3])) # lpt and gmc

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Gem ", EC50s[3]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Lpt and tax
```julia

combin = Bliss_params_unit(params[:, 1], params[:, 4], hcat(efcs[:, 1, 1], efcs[:, 1, 4])) # lpt and tax

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Tax ", EC50s[4]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Lpt and Palbo
```julia

combin = Bliss_params_unit(params[:, 1], params[:, 5], hcat(efcs[:, 1, 1], efcs[:, 1, 5])) # lpt and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Lpt ", EC50s[1], " & Palbo ", EC50s[5]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Dox and Gemc
```julia

combin = Bliss_params_unit(params[:, 2], params[:, 3], hcat(efcs[:, 1, 2], efcs[:, 1, 3])) # dox and gmc

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Dox ", EC50s[2], " & Gem ", EC50s[3]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Dox and Tax
```julia

combin = Bliss_params_unit(params[:, 2], params[:, 4], hcat(efcs[:, 1, 2], efcs[:, 1, 4])) # dox and tax

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Dox ", EC50s[2], " & Tax ", EC50s[4]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Dox and Palbo
```julia

combin = Bliss_params_unit(params[:, 2], params[:, 5], hcat(efcs[:, 1, 2], efcs[:, 1, 5])) # dox and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Dox ", EC50s[2], " & Palbo ", EC50s[5]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```
# Gem and Tax
```julia

combin = Bliss_params_unit(params[:, 3], params[:, 4], hcat(efcs[:, 1, 3], efcs[:, 1, 4])) # gem and tax

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Gem ", EC50s[3], " & Tax ", EC50s[4]))
plot!(tim, G2, lw=2, label="G2")
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Gem and Palbo
```julia

combin = Bliss_params_unit(params[:, 3], params[:, 5], hcat(efcs[:, 1, 3], efcs[:, 1, 5])) # gem and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Gem ", EC50s[3], " & Palbo ", EC50s[5]))
plot!(tim, G2, label="G2", lw=2)
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```

# Tax and Palbo
```julia

combin = Bliss_params_unit(params[:, 4], params[:, 5], hcat(efcs[:, 1, 4], efcs[:, 1, 5])) # tax and palbo

G1, G2 = predict(combin, g1avg[1] + g2avg[1], tim)

plot(tim, G1, label="G1", lw=2, title=string("Tax ", EC50s[4], " & Palbo ", EC50s[5]))
plot!(tim, G2, label="G2", lw=2)
plot!(tim, G1 .+ G2, label="total", lw=2, ylabel="cell number", xlabel="time [hr]")
```
