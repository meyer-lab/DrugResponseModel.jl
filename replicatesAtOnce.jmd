Simulation and representation of the three replicates.
```julia; echo=false
using DrugResponseModel
using Plots

concs, populations1, g1s1, g2s1 = load(189, 1);
concs, populations2, g1s2, g2s2 = load(189, 2);
concs, populations3, g1s3, g2s3 = load(189, 3);
g0 = g1s1[1,1,1]+g2s1[1,1,1];

rep1=rep1 = [52.1243, 1.2856, 0.0026682, 2.9096, 0.0250893, 0.0623134, 
        154.803, 1.10582, 0.304235, 0.295368, 0.411795, 0.613183,
        82.5301, 1.05063, 0.391899, 0.919925, 0.0730874, 0.338454,
        3.21729, 3.41872, 0.0841223, 1.52284, 0.281485, 0.207797, 
        60.2809, 0.913883, 0.00228251, 2.96638, 0.0583304, 0.0770743, 
        1.46021, 2.18259, 0.547192, 36.894, 70.8683, 17.2029, 10.6778];

rep2 = [148.285, 1.45332, 0.00741032, 2.98296, 0.245396, 0.154754, 
        264.239, 0.927782, 1.81686, 0.177914, 0.534253, 0.862213, 
        12.5118, 2.63457, 1.55861, 0.999485, 0.0404374, 0.190931,
        4.15226, 3.71135, 0.0279772, 1.08633, 0.464352, 0.306164, 
        98.2369, 0.859216, 0.895385, 2.72174, 0.0701948, 0.0925877, 
        2.64452, 1.30953, 0.497077, 52.8276, 37.8029, 21.3349, 11.6652];

rep3 = [61.7888, 0.984496, 0.00365409, 1.43353, 0.020916, 0.0499489, 
        22.8587, 3.56592, 2.316, 0.00665677, 0.402978, 0.384546, 
        17.2862, 2.39072, 1.34065, 0.999105, 0.0391467, 0.237266, 
        3.16643, 9.96997, 0.397842, 0.0697343, 0.508761, 0.340036, 
        112.903, 0.902078, 0.0722487, 1.91693, 0.0675425, 0.102127, 
        1.89566, 0.729827, 0.521269, 41.0931, 24.153, 36.7235, 13.4195];

ef1 = getODEparamsAll(rep1, concs);
ef2 = getODEparamsAll(rep2, concs);
ef3 = getODEparamsAll(rep3, concs);
```

```julia; echo=false
G1_1 = zeros(189, 8, 5)
G1_2 = zeros(189, 8, 5)
G1_3 = zeros(189, 8, 5)
G2_1 = zeros(189, 8, 5)
G2_2 = zeros(189, 8, 5)
G2_3 = zeros(189, 8, 5)
for i=1:5
    G1_1[:, :, i], G2_1[:, :, i], G1_2[:, :, i], G2_2[:, :, i], G1_3[:, :, i], G2_3[:, :, i] = DrugResponseModel.predict_replicates(ef1[:, :, i], ef2[:, :, i], ef3[:, :, i], concs[:,i], g0)
end

j=1
pl = [DrugResponseModel.plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

The solid lines show the three simulations, meaning, after obtaining the three sets of the parameters, we calculate the time-series simulation and find the cell number for each time-point, for the three replicates, separately. The ribbon is the bounds of std of the original data. This shows that even if the model for individual replicates, deviates a little, but on-average it doesn't deviate the standard deviation. So it is reliable. (here again for lapatinib)


```julia; echo=false
avgs = zeros(9, 8, 5)
stds = zeros(9, 8, 5)

for j=1:5
    avgs[:, :, j], stds[:, :, j] = DrugResponseModel.mean_std_params(ef1[:, :, j], ef2[:, :, j], ef3[:, :, j])
end
DrugResponseModel.plot_parameters(concs[:, 1], avgs[:, :, 1], stds[:, :, 1])
```

## Doxorubicin

```julia; echo=false
j=2
pl = [DrugResponseModel.plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
DrugResponseModel.plot_parameters(concs[:, 2], avgs[:, :, 2], stds[:, :, 2])
```

## Gemcitabine

```julia; echo=false
j=3
pl = [DrugResponseModel.plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
DrugResponseModel.plot_parameters(concs[:, 3], avgs[:, :, 3], stds[:, :, 3])
```

## Paclitaxel

```julia; echo=false
j=4
pl = [DrugResponseModel.plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
DrugResponseModel.plot_parameters(concs[:, 4], avgs[:, :, 4], stds[:, :, 4])
```

## Palbociclib

```julia; echo=false
j=5
pl = [DrugResponseModel.plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
DrugResponseModel.plot_parameters(concs[:, 5], avgs[:, :, 5], stds[:, :, 5])
```
