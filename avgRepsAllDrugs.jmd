---
weave_options:
  error: false
  echo: false
---

This file plots (1) time series simulations for average of 3 replicates on top of the average data. (2) shows the quantified drug effects for this setting. (3) shows the G2 phase percentage for each drug all concentrations, beside the G2 percentage of the data for that drug across all concentrations.

```julia
import Pkg; Pkg.instantiate()
Pkg.activate(".")
using DrugResponseModel
using Plots, LinearAlgebra, Statistics
Plots.scalefontsizes(0.7)

concs, _, g1s1, g2s1 = load(189, 1);
_, _, g1s2, g2s2 = load(189, 2);
_, _, g1s3, g2s3 = load(189, 3);

g1m = (g1s1 .+ g1s2 .+ g1s3) ./ 3;
g2m = (g2s1 .+ g2s2 .+ g2s3) ./ 3;
G1S = cat(g1s1, g1s2, g1s3, dims=4);
G2S = cat(g2s1, g2s2, g2s3, dims=4);

# Simulating only 7 concentrations to help improve the fit
newconcs = concs[1:7,:];
ng1m = g1m[:, 1:7, :];
ng2m = g2m[:, 1:7, :];
# _, p = optimize_hillAll(newconcs, ng1m, ng2m)

# exponential growth, assuming nG1=nG2=1, nD1=nD2=0.
# p = [69.0898, 1.75704, 1.00525e-9, 0.0, 1.30328e-9, 0.0, 0.0, 0.0, 1.01896e-9, 0.0, 0.0117861, 0.0, 0.0, 0.0, 52.0114, 1.04672, 0.0249361, 0.0, 1.20034e-9, 0.0, 0.0, 0.0, 1.0814e-9, 0.0, 0.0336839, 0.0, 0.0, 0.0, 6.48332, 1.5805, 0.232475, 0.0, 0.0762636, 0.0, 0.0, 0.0, 0.205384, 0.0, 0.00899069, 0.0, 0.0, 0.0, 3.3574, 3.51098, 0.0213074, 0.0, 1.03062e-9, 0.0, 0.0, 0.0, 1.00861e-9, 0.0, 0.0212547, 0.0, 0.0, 0.0, 29.4276, 1.27817, 0.334571, 0.0, 4.21098e-9, 0.0, 0.0, 0.0, 1.01008e-9, 0.0, 0.00287931, 0.0, 0.0, 0.0, 0.206861, 0.0, 0.0145702, 0.0, 0.0, 0.0]

# model
p = [51.0122, 1.19478, 0.0123853, 0.197453, 0.783039, 6.53136e-5, 1.35692e-6, 0.284673, 0.00521293, 3.69958e-7, 0.00913979, 0.0258875, 3.04229e-6, 0.00527735, 18.4107, 1.38004, 0.288625, 9.6902e-9, 0.787761, 1.02151, 1.99999, 0.106618, 4.35605e-9, 0.0478454, 1.22383e-7, 1.04499e-7, 0.381662, 2.39835e-9, 4.75582, 1.78552, 0.481014, 0.404215, 0.471125, 0.187735, 1.99999, 0.255864, 1.35294e-9, 7.07919e-9, 1.74332e-9, 0.0672485, 4.87662e-8, 4.45473e-9, 7.0734, 2.47932, 0.066145, 5.62597e-8, 1.94036, 2.0, 2.0, 0.00866935, 1.22435e-9, 9.23547e-7, 2.0, 2.14921e-7, 1.23361e-7, 0.0174862, 36.8515, 1.11516, 0.0806277, 0.726529, 1.92473, 1.99999, 1.97768, 0.319934, 2.65382e-9, 6.12668e-9, 0.0197645, 1.06389e-6, 5.28303e-8, 0.0308013, 0.196915, 2.0, 1.92313, 2.0, 1.99921, 0.199044]

efcs = getODEparams(p, concs);
```

```julia
# find G1 and G2 cell number for this set of parameters
G1 = zeros(189, 7, 5)
G2 = zeros(189, 7, 5)


t = LinRange(0.0, 95.0, 189)
for k=1:5 # drug number
    for i = 1:7 # concentration number
        G1[:, i, k], G2[:, i, k], _ = predict(efcs[:, i, k], efcs[:, 1, k], t)
    end
end

# find G2 percentage
g2 = G2 ./(G1 .+ G2); # in model
gdata2 = g2m ./ (g2m .+ g1m); # in data
```

print the SSE for all drugs over all the concentrations:

```julia
# calculate the norm error (SSE)
err = zeros(5)
for i=1:5
    err[i] = norm(G1[:, :, i] - g1m[:, 1:7, i]) + norm(G2[:, :, i] - g2m[:, 1:7, i])
end
print("lapatinib: ", err[1], ", doxorubicin: ", err[2], ", gemcitabine: ", err[3], ", paclitaxel: ", err[4], ", palbociclib: ", err[5])

g1m = mean(G1S, dims = 4);
g2m = mean(G2S, dims = 4);
g1s = std(G1S, dims = 4);
g2s = std(G2S, dims = 4);

function plot_ribbon(conc, g1m, g2m, g1s, g2s, G1, G2, i, leg)
    time = LinRange(0.0, 95.0, 189)

    plot(
        time,
        g1m[:, i],
        ribbon= g1s[:, i],
        title = string(conc, "nM"),
        titlefontsize = 8,
        color = 6,
        legend=leg,
        label = "G1",
        xlabel = "time [hr]",
        ylabel = "cell number",
        alpha = 0.1,
    )
    plot!(time, G1[:, i], label = "G1 sim", color = 6, lw=1)
    plot!(time, g2m[:, i], ribbon=g2s[:, i], color = 7, label = "G2", alpha = 0.1)
    plot!(time, G2[:, i], label = "G2 sim", color = 7, lw=1)
    ylims!((0.0, 35))
end
```

### Lapatinib

time series plot

```julia
#p1 = plot_ribbon(concs[1, 1], g1m[:, :, 1], g2m[:, :, 1], g1s[:, :, 1], g2s[:, :, 1], G1[:, :, 1], G2[:, :, 1], 1, true)
#p = [plot_ribbon(concs[i, 1], g1m[:, :, 1], g2m[:, :, 1], g1s[:, :, 1], g2s[:, :, 1], G1[:, :, 1], G2[:, :, 1], i, false) for i=2:7]
p1 = DrugResponseModel.plotavg(G1[:, :, 1], G2[:, :, 1], g1m[:, :, 1], g2m[:, :, 1], 1, :false, concs[1, 1])
p =[DrugResponseModel.plotavg(G1[:, :, 1], G2[:, :, 1], g1m[:, :, 1], g2m[:, :, 1], i, :false, concs[i, 1]) for i=2:7]
plot(p1, p..., figsize=(1000, 700), dpi=150)
```

percentage plot

```julia
p1=DrugResponseModel.plotperc(g2[:, :, 1], "lap.", concs[:, 1], "model")
p2=DrugResponseModel.plotperc(gdata2[:, :, 1], "lap.", concs[:, 1], "data")
plot(p1, p2)
```

quantified response plot

```julia

p1 = G1plots(concs[:, 1], efcs[1:2, :, 1], "G1 prog. rate")
p2 = G2plots(concs[:, 1], efcs[3:6, :, 1], "G2 prog. rate")
p3 = G1plots(concs[:, 1], efcs[7:8, :, 1], "G1 death rate", ylim=0.5)
p4 = G2plots(concs[:, 1], efcs[9:12, :, 1], "G2 death rate", ylim=0.5)
plot(p1, p2, p3, p4)
```

### Doxorubicin

time series plot

```julia
#p1 = plot_ribbon(concs[1, 2], g1m[:, :, 2], g2m[:, :, 2], g1s[:, :, 2], g2s[:, :, 2], G1[:, :, 2], G2[:, :, 2], 1, true)
#p = [plot_ribbon(concs[i, 2], g1m[:, :, 2], g2m[:, :, 2], g1s[:, :, 2], g2s[:, :, 2], G1[:, :, 2], G2[:, :, 2], i, false) for i=2:7]
p1 = DrugResponseModel.plotavg(G1[:, :, 2], G2[:, :, 2], g1m[:, :, 2], g2m[:, :, 2], 1, :false, concs[1, 2])
p =[DrugResponseModel.plotavg(G1[:, :, 2], G2[:, :, 2], g1m[:, :, 2], g2m[:, :, 2], i, :false, concs[i, 2]) for i=2:7]
plot(p1, p..., figsize=(1000, 700), dpi=150)
```

percentage plot

```julia
p1=DrugResponseModel.plotperc(g2[:, :, 2], "dox.", concs[:, 2], "model")
p2=DrugResponseModel.plotperc(gdata2[:, :, 2], "dox.", concs[:, 2], "data")
plot(p1, p2)
```

quantified response plot

```julia
p1 = G1plots(concs[:, 2], efcs[1:2, :, 2], "G1 prog. rate")
p2 = G2plots(concs[:, 2], efcs[3:6, :, 2], "G2 prog. rate")
p3 = G1plots(concs[:, 2], efcs[7:8, :, 2], "G1 death rate", ylim=0.5)
p4 = G2plots(concs[:, 2], efcs[9:12, :, 2], "G2 death rate", ylim=0.5)
plot(p1, p2, p3, p4)
```

### Gemcitabine

time series plot

```julia
#p1 = plot_ribbon(concs[1, 3], g1m[:, :, 3], g2m[:, :, 3], g1s[:, :, 3], g2s[:, :, 3], G1[:, :, 3], G2[:, :, 3], 1, true)
#p = [plot_ribbon(concs[i, 3], g1m[:, :, 3], g2m[:, :, 3], g1s[:, :, 3], g2s[:, :, 3], G1[:, :, 3], G2[:, :, 3], i, false) for i=2:7]
p1 = DrugResponseModel.plotavg(G1[:, :, 3], G2[:, :, 3], g1m[:, :, 3], g2m[:, :, 3], 1, :false, concs[1, 3])
p =[DrugResponseModel.plotavg(G1[:, :, 3], G2[:, :, 3], g1m[:, :, 3], g2m[:, :, 3], i, :false, concs[i, 3]) for i=2:7]
plot(p1, p..., figsize=(1000, 700), dpi=150)
```

percentage plot

```julia
p1=DrugResponseModel.plotperc(g2[:, :, 3], "gem.", concs[:, 3], "model")
p2=DrugResponseModel.plotperc(gdata2[:, :, 3], "gem.", concs[:, 3], "data")
plot(p1, p2)
```

quantified response plot

```julia
p1 = G1plots(concs[:, 3], efcs[1:2, :, 3], "G1 prog. rate")
p2 = G2plots(concs[:, 3], efcs[3:6, :, 3], "G2 prog. rate")
p3 = G1plots(concs[:, 3], efcs[7:8, :, 3], "G1 death rate", ylim=0.5)
p4 = G2plots(concs[:, 3], efcs[9:12, :, 3], "G2 death rate", ylim=0.5)
plot(p1, p2, p3, p4)
```

### Paclitaxel

time series plot

```julia
#p1 = plot_ribbon(concs[1, 4], g1m[:, :, 4], g2m[:, :, 4], g1s[:, :, 4], g2s[:, :, 4], G1[:, :, 4], G2[:, :, 4], 1, true)
#p = [plot_ribbon(concs[i, 4], g1m[:, :, 4], g2m[:, :, 4], g1s[:, :, 4], g2s[:, :, 4], G1[:, :, 4], G2[:, :, 4], i, false) for i=2:7]
p1 = DrugResponseModel.plotavg(G1[:, :, 4], G2[:, :, 4], g1m[:, :, 4], g2m[:, :, 4], 1, :false, concs[1, 4])
p =[DrugResponseModel.plotavg(G1[:, :, 4], G2[:, :, 4], g1m[:, :, 4], g2m[:, :, 4], i, :false, concs[i, 4]) for i=2:7]
plot(p1, p..., figsize=(1000, 700), dpi=150)
```

percentage plot

```julia
p1=DrugResponseModel.plotperc(g2[:, :, 4], "tax.", concs[:, 4], "model")
p2=DrugResponseModel.plotperc(gdata2[:, :, 4], "tax.", concs[:, 4], "data")
plot(p1, p2)
```

quantified response plot

```julia
p1 = G1plots(concs[:, 4], efcs[1:2, :, 4], "G1 prog. rate")
p2 = G2plots(concs[:, 4], efcs[3:6, :, 4], "G2 prog. rate")
p3 = G1plots(concs[:, 4], efcs[7:8, :, 4], "G1 death rate", ylim=0.5)
p4 = G2plots(concs[:, 4], efcs[9:12, :, 4], "G2 death rate", ylim=0.5)
plot(p1, p2, p3, p4)
```

### Palbociclib

time series plot

```julia
#p1 = plot_ribbon(concs[1, 5], g1m[:, :, 5], g2m[:, :, 5], g1s[:, :, 5], g2s[:, :, 5], G1[:, :, 5], G2[:, :, 5], 1, true)
#p = [plot_ribbon(concs[i, 5], g1m[:, :, 5], g2m[:, :, 5], g1s[:, :, 5], g2s[:, :, 5], G1[:, :, 5], G2[:, :, 5], i, false) for i=2:7]
p1 = DrugResponseModel.plotavg(G1[:, :, 5], G2[:, :, 5], g1m[:, :, 5], g2m[:, :, 5], 1, :false, concs[1, 5])
p =[DrugResponseModel.plotavg(G1[:, :, 5], G2[:, :, 5], g1m[:, :, 5], g2m[:, :, 5], i, :false, concs[i, 5]) for i=2:7]
plot(p1, p..., figsize=(1000, 700), dpi=150)
```

percentage plot

```julia
p1=DrugResponseModel.plotperc(g2[:, :, 5], "palb.", concs[:, 5], "model")
p2=DrugResponseModel.plotperc(gdata2[:, :, 5], "palb.", concs[:, 5], "data")
plot(p1, p2)
```

quantified response plot

```julia
p1 = G1plots(concs[:, 5], efcs[1:2, :, 5], "G1 prog. rate")
p2 = G2plots(concs[:, 5], efcs[3:6, :, 5], "G2 prog. rate")
p3 = G1plots(concs[:, 5], efcs[7:8, :, 5], "G1 death rate", ylim=0.5)
p4 = G2plots(concs[:, 5], efcs[9:12, :, 5], "G2 death rate", ylim=0.5)
plot(p1, p2, p3, p4)
```
