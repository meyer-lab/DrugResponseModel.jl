Simulation and representation of the three replicates.
```julia; echo=false
using DrugResponseModel
using Plots, Statistics

concs, populations1, g1s1, g2s1 = load(189, 1);
concs, populations2, g1s2, g2s2 = load(189, 2);
concs, populations3, g1s3, g2s3 = load(189, 3);
g0 = g1s1[1,1,1]+g2s1[1,1,1];

rep1=[488.512, 1.23245, 3.0004, 2.2998, 1.0627, 0.470721, 499.847, 1.1376, 3.00089, 1.64837, 2.08782, 2.38183, 99.9222, 1.28673, 3.00047, 2.29938, 0.424356, 0.967114, 3.80719, 3.27323, 3.00041, 1.67737, 0.886276, 0.395782, 499.507, 0.858585, 3.00041, 2.29945, 0.938065, 0.351223, 0.369983, 0.44308, 0.549918, 9.39127, 15.38, 49.7701, 12.5483];

rep2 = [494.269, 1.2041, 3.00076, 2.29913, 1.04318, 0.302235, 283.686, 1.06898, 3.01423, 1.23178, 1.21506, 1.41769, 16.7674, 2.08015, 3.00764, 1.99929, 0.211605, 0.300602, 4.30703, 3.97039, 3.00632, 1.82602, 1.07467, 0.492057, 488.197, 1.02847, 3.00104, 2.29853, 0.829211, 0.303557, 0.461222, 0.515171, 0.509992, 9.81074, 15.5365, 49.2141, 14.6231];

rep3 =  [481.136, 1.30481, 3.00053, 2.29917, 0.994507, 0.277225, 499.229, 1.09841, 3.14976, 0.988348, 1.79487, 1.83926, 97.848, 1.34234, 3.00102, 2.27548, 0.351486, 0.784008, 3.18769, 9.93378, 3.02063, 1.08641, 0.712448, 0.286206, 498.767, 1.16134, 3.00026, 2.29666, 0.894815, 0.251544, 0.405968, 0.440474, 0.525493, 9.12146, 15.0095, 49.6384, 9.63197];

```

The solid lines show the three simulations, meaning, after obtaining the three sets of the parameters, we calculate the time-series simulation and find the cell number for each time-point, for the three replicates, separately. The ribbon is the bounds of std of the original data. This shows that even if the model for individual replicates, deviates a little, but on-average it doesn't deviate the standard deviation. So it is reliable. (here again for lapatinib)


```julia; echo=false
function plot2(G1_1, G1_2, G1_3, G2_1, G2_2, G2_3, g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j)
    time = LinRange(0.0, 95.0, 189)
    meang1, meang2, stdg1, stdg2 = find_mean_std_gs(g1s1, g1s2, g1s3, g2s1, g2s2, g2s3);
    plot(time, meang1[:, i, j]; ribbon = stdg1[:, i, j], color=1, label = "", xlabel = "time [hr]", ylabel = "cell number", alpha = 0.1)
    plot!(time, G1_1, label="G1", color = 1)
    plot!(time, G1_2, label="", color = 1)
    plot!(time, G1_3, label="", color = 1)
    plot!(time, meang2[:, i, j]; ribbon = stdg2[:, i, j], color=2, label = "", alpha = 0.1)
    plot!(time, G2_1, label="G2", color = 2)
    plot!(time, G2_2, label="", color = 2)
    plot!(time, G2_3, label="", color = 2)
    ylims!((0.0, 45))
end

meanG1, meanG2, stdG1, stdG2, G1_1, G2_1, G1_2, G2_2, G1_3, G2_3 = find_mean_std_simul(rep1, rep2, rep3, concs, g0);

# the lines are simulation; the std (ribbon) is the data
j=1
pl = [plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
avgs, stds = avgRepsParams(rep1, rep2, rep3, concs)
h=1 # lapatinib

lapat = avgs[:,:,h]; lapatstd=stds[:,:,h]
plot_parameters(concs[:, h], lapat, lapatstd)
```

## Doxorubicin

```julia; echo=false
j=2
pl = [plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
h=2

lapat = avgs[:,:,h]; lapatstd=stds[:,:,h]
plot_parameters(concs[:, h], lapat, lapatstd)
```

## Gemcitabine

```julia; echo=false
j=3
pl = [plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
h=3

lapat = avgs[:,:,h]; lapatstd=stds[:,:,h]
plot_parameters(concs[:, h], lapat, lapatstd)
```

## Paclitaxel

```julia; echo=false
j=4
pl = [plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
h=4

lapat = avgs[:,:,h]; lapatstd=stds[:,:,h]
plot_parameters(concs[:, h], lapat, lapatstd)
```

## Palbociclib

```julia; echo=false
j=5
pl = [plot2(G1_1[:, i, j], G1_2[:, i, j], G1_3[:, i, j], G2_1[:, i, j], G2_2[:, i, j], G2_3[:, i, j], g1s1, g1s2, g1s3, g2s1, g2s2, g2s3, i, j) for i=1:8]
plot(pl..., size=(1000,700))
```

```julia; echo=false
h=5

lapat = avgs[:,:,h]; lapatstd=stds[:,:,h]
plot_parameters(concs[:, h], lapat, lapatstd)
```
